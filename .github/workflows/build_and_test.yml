# GitHub Action workflow to build and test the library
#

name: Build and test pysap

on: [push, pull_request]

jobs:
  health:
    name: Check code health
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: [2.7]
    steps:
      - name: Checkout pysap
        uses: actions/checkout@v2
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python2 -m pip install --upgrade pip wheel
          python2 -m pip install flake8 six
          python2 -m pip install -r requirements.txt
      - name: Run flake8 tests
        run: |
          flake8 . --count --select=E901,E999,F821,F822,F823 --show-source --statistics
          flake8 . --count --ignore=E501 --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  test:
    name: Run unit tests and build wheel
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, macos-latest]
        python-version: [2.7]
        experimental: [false]
        include:
          - os: windows-latest
            python-version: 2.7
            experimental: true
    steps:
      - name: Checkout pysap
        uses: actions/checkout@v2
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install macOS dependencies
        if: runner.os == 'macOS'
        run: |
          brew install openssl libdnet libpcap
      - name: Install Windows dependencies
        if: runner.os == 'Windows'
        run: |
          choco install vcredist2008 -f -y
          choco install dotnet3.5 -f -y
          (New-Object System.Net.WebClient).DownloadFile("https://web.archive.org/web/20200803210206if_/https://download.microsoft.com/download/7/9/6/796EF2E4-801B-4FC4-AB28-B59FBF6D907B/VCForPython27.msi", "VCForPython27.msi")
          msiexec.exe /i VCForPython27.msi ALLUSERS=1 /qn /norestart

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip wheel
          python -m pip install -r requirements.txt

      - name: Run unit tests
        run: |
          python setup.py test

      - name: Build wheel artifact
        run: |
          python setup.py bdist_wheel
      - name: Upload wheel artifact
        uses: actions/upload-artifact@v2
        with:
          name: packages
          path: dist/*.whl

  docs:
    name: Build documentation and source package
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: [2.7]
    steps:
      - name: Checkout pysap
        uses: actions/checkout@v2
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Linux dependencies
        run: |
          sudo apt-get install pandoc texlive-latex-base
      - name: Install Python dependencies
        run: |
          python2 -m pip install --upgrade pip wheel
          python2 -m pip install -r requirements-docs.txt
      - name: Install the library
        run: |
          python2 setup.py install
      - name: Pre-run documentation notebooks
        run: |
          python2 setup.py notebooks

      - name: Build source artifact
        run: |
          python2 setup.py sdist

      - name: Build documentation
        run: |
          python2 setup.py doc

      - name: Upload source artifact
        uses: actions/upload-artifact@v2
        with:
          name: packages
          path: dist/*.tar.gz

  release:
    name: Release
    runs-on: ubuntu-18.04
    needs: [test, docs]
    env:
       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'v') }}
    steps:
       - name: Download artifacts
         uses: actions/download-artifact@v2
         with:
            name: packages
            path: dist
       - name: Create release and upload assets
         uses: meeDamian/github-release@2.0
         with:
            token: ${{ secrets.GITHUB_TOKEN }}
            name: pysap ${{ github.ref }}
            draft: true
            files: dist/
            gzip: folders
